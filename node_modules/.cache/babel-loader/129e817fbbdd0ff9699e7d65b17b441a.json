{"ast":null,"code":"import process from 'node:process';\nimport chalk from 'chalk';\nimport cliCursor from 'cli-cursor';\nimport cliSpinners from 'cli-spinners';\nimport logSymbols from 'log-symbols';\nimport stripAnsi from 'strip-ansi';\nimport wcwidth from 'wcwidth';\nimport isInteractive from 'is-interactive';\nimport isUnicodeSupported from 'is-unicode-supported';\nimport { StdinDiscarder } from './utilities.js';\nlet stdinDiscarder;\n\nclass Ora {\n  #linesToClear = 0;\n  #isDiscardingStdin = false;\n  #lineCount = 0;\n  #frameIndex = 0;\n  #options;\n  #spinner;\n  #stream;\n  #id;\n  #initialInterval;\n  #isEnabled;\n  #isSilent;\n  #indent;\n  #text;\n  #prefixText;\n  color;\n\n  constructor(options) {\n    if (!stdinDiscarder) {\n      stdinDiscarder = new StdinDiscarder();\n    }\n\n    if (typeof options === 'string') {\n      options = {\n        text: options\n      };\n    }\n\n    this.#options = {\n      color: 'cyan',\n      stream: process.stderr,\n      discardStdin: true,\n      hideCursor: true,\n      ...options\n    }; // Public\n\n    this.color = this.#options.color; // It's important that these use the public setters.\n\n    this.spinner = this.#options.spinner;\n    this.#initialInterval = this.#options.interval;\n    this.#stream = this.#options.stream;\n    this.#isEnabled = typeof this.#options.isEnabled === 'boolean' ? this.#options.isEnabled : isInteractive({\n      stream: this.#stream\n    });\n    this.#isSilent = typeof this.#options.isSilent === 'boolean' ? this.#options.isSilent : false; // Set *after* `this.#stream`.\n    // It's important that these use the public setters.\n\n    this.text = this.#options.text;\n    this.prefixText = this.#options.prefixText;\n    this.indent = this.#options.indent;\n\n    if (process.env.NODE_ENV === 'test') {\n      this._stream = this.#stream;\n      this._isEnabled = this.#isEnabled;\n      Object.defineProperty(this, '_linesToClear', {\n        get() {\n          return this.#linesToClear;\n        },\n\n        set(newValue) {\n          this.#linesToClear = newValue;\n        }\n\n      });\n      Object.defineProperty(this, '_frameIndex', {\n        get() {\n          return this.#frameIndex;\n        }\n\n      });\n      Object.defineProperty(this, '_lineCount', {\n        get() {\n          return this.#lineCount;\n        }\n\n      });\n    }\n  }\n\n  get indent() {\n    return this.#indent;\n  }\n\n  set indent(indent) {\n    if (indent === void 0) {\n      indent = 0;\n    }\n\n    if (!(indent >= 0 && Number.isInteger(indent))) {\n      throw new Error('The `indent` option must be an integer from 0 and up');\n    }\n\n    this.#indent = indent;\n    this.updateLineCount();\n  }\n\n  get interval() {\n    return this.#initialInterval || this.#spinner.interval || 100;\n  }\n\n  get spinner() {\n    return this.#spinner;\n  }\n\n  set spinner(spinner) {\n    this.#frameIndex = 0;\n    this.#initialInterval = undefined;\n\n    if (typeof spinner === 'object') {\n      if (spinner.frames === undefined) {\n        throw new Error('The given spinner must have a `frames` property');\n      }\n\n      this.#spinner = spinner;\n    } else if (!isUnicodeSupported()) {\n      this.#spinner = cliSpinners.line;\n    } else if (spinner === undefined) {\n      // Set default spinner\n      this.#spinner = cliSpinners.dots;\n    } else if (spinner !== 'default' && cliSpinners[spinner]) {\n      this.#spinner = cliSpinners[spinner];\n    } else {\n      throw new Error(`There is no built-in spinner named '${spinner}'. See https://github.com/sindresorhus/cli-spinners/blob/main/spinners.json for a full list.`);\n    }\n  }\n\n  get text() {\n    return this.#text;\n  }\n\n  set text(value) {\n    this.#text = value || '';\n    this.updateLineCount();\n  }\n\n  get prefixText() {\n    return this.#prefixText;\n  }\n\n  set prefixText(value) {\n    this.#prefixText = value || '';\n    this.updateLineCount();\n  }\n\n  get isSpinning() {\n    return this.#id !== undefined;\n  } // TODO: Use private methods when targeting Node.js 14.\n\n\n  getFullPrefixText() {\n    let prefixText = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.#prefixText;\n    let postfix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ' ';\n\n    if (typeof prefixText === 'string' && prefixText !== '') {\n      return prefixText + postfix;\n    }\n\n    if (typeof prefixText === 'function') {\n      return prefixText() + postfix;\n    }\n\n    return '';\n  }\n\n  updateLineCount() {\n    const columns = this.#stream.columns || 80;\n    const fullPrefixText = this.getFullPrefixText(this.#prefixText, '-');\n    this.#lineCount = 0;\n\n    for (const line of stripAnsi(' '.repeat(this.#indent) + fullPrefixText + '--' + this.#text).split('\\n')) {\n      this.#lineCount += Math.max(1, Math.ceil(wcwidth(line) / columns));\n    }\n  }\n\n  get isEnabled() {\n    return this.#isEnabled && !this.#isSilent;\n  }\n\n  set isEnabled(value) {\n    if (typeof value !== 'boolean') {\n      throw new TypeError('The `isEnabled` option must be a boolean');\n    }\n\n    this.#isEnabled = value;\n  }\n\n  get isSilent() {\n    return this.#isSilent;\n  }\n\n  set isSilent(value) {\n    if (typeof value !== 'boolean') {\n      throw new TypeError('The `isSilent` option must be a boolean');\n    }\n\n    this.#isSilent = value;\n  }\n\n  frame() {\n    const {\n      frames\n    } = this.#spinner;\n    let frame = frames[this.#frameIndex];\n\n    if (this.color) {\n      frame = chalk[this.color](frame);\n    }\n\n    this.#frameIndex = ++this.#frameIndex % frames.length;\n    const fullPrefixText = typeof this.#prefixText === 'string' && this.#prefixText !== '' ? this.#prefixText + ' ' : '';\n    const fullText = typeof this.text === 'string' ? ' ' + this.text : '';\n    return fullPrefixText + frame + fullText;\n  }\n\n  clear() {\n    if (!this.#isEnabled || !this.#stream.isTTY) {\n      return this;\n    }\n\n    this.#stream.cursorTo(0);\n\n    for (let index = 0; index < this.#linesToClear; index++) {\n      if (index > 0) {\n        this.#stream.moveCursor(0, -1);\n      }\n\n      this.#stream.clearLine(1);\n    }\n\n    if (this.#indent || this.lastIndent !== this.#indent) {\n      this.#stream.cursorTo(this.#indent);\n    }\n\n    this.lastIndent = this.#indent;\n    this.#linesToClear = 0;\n    return this;\n  }\n\n  render() {\n    if (this.#isSilent) {\n      return this;\n    }\n\n    this.clear();\n    this.#stream.write(this.frame());\n    this.#linesToClear = this.#lineCount;\n    return this;\n  }\n\n  start(text) {\n    if (text) {\n      this.text = text;\n    }\n\n    if (this.#isSilent) {\n      return this;\n    }\n\n    if (!this.#isEnabled) {\n      if (this.text) {\n        this.#stream.write(`- ${this.text}\\n`);\n      }\n\n      return this;\n    }\n\n    if (this.isSpinning) {\n      return this;\n    }\n\n    if (this.#options.hideCursor) {\n      cliCursor.hide(this.#stream);\n    }\n\n    if (this.#options.discardStdin && process.stdin.isTTY) {\n      this.#isDiscardingStdin = true;\n      stdinDiscarder.start();\n    }\n\n    this.render();\n    this.#id = setInterval(this.render.bind(this), this.interval);\n    return this;\n  }\n\n  stop() {\n    if (!this.#isEnabled) {\n      return this;\n    }\n\n    clearInterval(this.#id);\n    this.#id = undefined;\n    this.#frameIndex = 0;\n    this.clear();\n\n    if (this.#options.hideCursor) {\n      cliCursor.show(this.#stream);\n    }\n\n    if (this.#options.discardStdin && process.stdin.isTTY && this.#isDiscardingStdin) {\n      stdinDiscarder.stop();\n      this.#isDiscardingStdin = false;\n    }\n\n    return this;\n  }\n\n  succeed(text) {\n    return this.stopAndPersist({\n      symbol: logSymbols.success,\n      text\n    });\n  }\n\n  fail(text) {\n    return this.stopAndPersist({\n      symbol: logSymbols.error,\n      text\n    });\n  }\n\n  warn(text) {\n    return this.stopAndPersist({\n      symbol: logSymbols.warning,\n      text\n    });\n  }\n\n  info(text) {\n    return this.stopAndPersist({\n      symbol: logSymbols.info,\n      text\n    });\n  }\n\n  stopAndPersist() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (this.#isSilent) {\n      return this;\n    }\n\n    const prefixText = options.prefixText || this.#prefixText;\n    const text = options.text || this.text;\n    const fullText = typeof text === 'string' ? ' ' + text : '';\n    this.stop();\n    this.#stream.write(`${this.getFullPrefixText(prefixText, ' ')}${options.symbol || ' '}${fullText}\\n`);\n    return this;\n  }\n\n}\n\nexport default function ora(options) {\n  return new Ora(options);\n}\nexport async function oraPromise(action, options) {\n  const actionIsFunction = typeof action === 'function';\n  const actionIsPromise = typeof action.then === 'function';\n\n  if (!actionIsFunction && !actionIsPromise) {\n    throw new TypeError('Parameter `action` must be a Function or a Promise');\n  }\n\n  const {\n    successText,\n    failText\n  } = typeof options === 'object' ? options : {\n    successText: undefined,\n    failText: undefined\n  };\n  const spinner = ora(options).start();\n\n  try {\n    const promise = actionIsFunction ? action(spinner) : action;\n    const result = await promise;\n    spinner.succeed(successText === undefined ? undefined : typeof successText === 'string' ? successText : successText(result));\n    return result;\n  } catch (error) {\n    spinner.fail(failText === undefined ? undefined : typeof failText === 'string' ? failText : failText(error));\n    throw error;\n  }\n}","map":{"version":3,"names":["process","chalk","cliCursor","cliSpinners","logSymbols","stripAnsi","wcwidth","isInteractive","isUnicodeSupported","StdinDiscarder","stdinDiscarder","Ora","linesToClear","isDiscardingStdin","lineCount","frameIndex","options","spinner","stream","id","initialInterval","isEnabled","isSilent","indent","text","prefixText","color","constructor","stderr","discardStdin","hideCursor","interval","env","NODE_ENV","_stream","_isEnabled","Object","defineProperty","get","set","newValue","Number","isInteger","Error","updateLineCount","undefined","frames","line","dots","value","isSpinning","getFullPrefixText","postfix","columns","fullPrefixText","repeat","split","Math","max","ceil","TypeError","frame","length","fullText","clear","isTTY","cursorTo","index","moveCursor","clearLine","lastIndent","render","write","start","hide","stdin","setInterval","bind","stop","clearInterval","show","succeed","stopAndPersist","symbol","success","fail","error","warn","warning","info","ora","oraPromise","action","actionIsFunction","actionIsPromise","then","successText","failText","promise","result"],"sources":["/home/razma/node_modules/ora/index.js"],"sourcesContent":["import process from 'node:process';\nimport chalk from 'chalk';\nimport cliCursor from 'cli-cursor';\nimport cliSpinners from 'cli-spinners';\nimport logSymbols from 'log-symbols';\nimport stripAnsi from 'strip-ansi';\nimport wcwidth from 'wcwidth';\nimport isInteractive from 'is-interactive';\nimport isUnicodeSupported from 'is-unicode-supported';\nimport {StdinDiscarder} from './utilities.js';\n\nlet stdinDiscarder;\n\nclass Ora {\n\t#linesToClear = 0;\n\t#isDiscardingStdin = false;\n\t#lineCount = 0;\n\t#frameIndex = 0;\n\t#options;\n\t#spinner;\n\t#stream;\n\t#id;\n\t#initialInterval;\n\t#isEnabled;\n\t#isSilent;\n\t#indent;\n\t#text;\n\t#prefixText;\n\n\tcolor;\n\n\tconstructor(options) {\n\t\tif (!stdinDiscarder) {\n\t\t\tstdinDiscarder = new StdinDiscarder();\n\t\t}\n\n\t\tif (typeof options === 'string') {\n\t\t\toptions = {\n\t\t\t\ttext: options,\n\t\t\t};\n\t\t}\n\n\t\tthis.#options = {\n\t\t\tcolor: 'cyan',\n\t\t\tstream: process.stderr,\n\t\t\tdiscardStdin: true,\n\t\t\thideCursor: true,\n\t\t\t...options,\n\t\t};\n\n\t\t// Public\n\t\tthis.color = this.#options.color;\n\n\t\t// It's important that these use the public setters.\n\t\tthis.spinner = this.#options.spinner;\n\n\t\tthis.#initialInterval = this.#options.interval;\n\t\tthis.#stream = this.#options.stream;\n\t\tthis.#isEnabled = typeof this.#options.isEnabled === 'boolean' ? this.#options.isEnabled : isInteractive({stream: this.#stream});\n\t\tthis.#isSilent = typeof this.#options.isSilent === 'boolean' ? this.#options.isSilent : false;\n\n\t\t// Set *after* `this.#stream`.\n\t\t// It's important that these use the public setters.\n\t\tthis.text = this.#options.text;\n\t\tthis.prefixText = this.#options.prefixText;\n\t\tthis.indent = this.#options.indent;\n\n\t\tif (process.env.NODE_ENV === 'test') {\n\t\t\tthis._stream = this.#stream;\n\t\t\tthis._isEnabled = this.#isEnabled;\n\n\t\t\tObject.defineProperty(this, '_linesToClear', {\n\t\t\t\tget() {\n\t\t\t\t\treturn this.#linesToClear;\n\t\t\t\t},\n\t\t\t\tset(newValue) {\n\t\t\t\t\tthis.#linesToClear = newValue;\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tObject.defineProperty(this, '_frameIndex', {\n\t\t\t\tget() {\n\t\t\t\t\treturn this.#frameIndex;\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tObject.defineProperty(this, '_lineCount', {\n\t\t\t\tget() {\n\t\t\t\t\treturn this.#lineCount;\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n\n\tget indent() {\n\t\treturn this.#indent;\n\t}\n\n\tset indent(indent = 0) {\n\t\tif (!(indent >= 0 && Number.isInteger(indent))) {\n\t\t\tthrow new Error('The `indent` option must be an integer from 0 and up');\n\t\t}\n\n\t\tthis.#indent = indent;\n\t\tthis.updateLineCount();\n\t}\n\n\tget interval() {\n\t\treturn this.#initialInterval || this.#spinner.interval || 100;\n\t}\n\n\tget spinner() {\n\t\treturn this.#spinner;\n\t}\n\n\tset spinner(spinner) {\n\t\tthis.#frameIndex = 0;\n\t\tthis.#initialInterval = undefined;\n\n\t\tif (typeof spinner === 'object') {\n\t\t\tif (spinner.frames === undefined) {\n\t\t\t\tthrow new Error('The given spinner must have a `frames` property');\n\t\t\t}\n\n\t\t\tthis.#spinner = spinner;\n\t\t} else if (!isUnicodeSupported()) {\n\t\t\tthis.#spinner = cliSpinners.line;\n\t\t} else if (spinner === undefined) {\n\t\t\t// Set default spinner\n\t\t\tthis.#spinner = cliSpinners.dots;\n\t\t} else if (spinner !== 'default' && cliSpinners[spinner]) {\n\t\t\tthis.#spinner = cliSpinners[spinner];\n\t\t} else {\n\t\t\tthrow new Error(`There is no built-in spinner named '${spinner}'. See https://github.com/sindresorhus/cli-spinners/blob/main/spinners.json for a full list.`);\n\t\t}\n\t}\n\n\tget text() {\n\t\treturn this.#text;\n\t}\n\n\tset text(value) {\n\t\tthis.#text = value || '';\n\t\tthis.updateLineCount();\n\t}\n\n\tget prefixText() {\n\t\treturn this.#prefixText;\n\t}\n\n\tset prefixText(value) {\n\t\tthis.#prefixText = value || '';\n\t\tthis.updateLineCount();\n\t}\n\n\tget isSpinning() {\n\t\treturn this.#id !== undefined;\n\t}\n\n\t// TODO: Use private methods when targeting Node.js 14.\n\tgetFullPrefixText(prefixText = this.#prefixText, postfix = ' ') {\n\t\tif (typeof prefixText === 'string' && prefixText !== '') {\n\t\t\treturn prefixText + postfix;\n\t\t}\n\n\t\tif (typeof prefixText === 'function') {\n\t\t\treturn prefixText() + postfix;\n\t\t}\n\n\t\treturn '';\n\t}\n\n\tupdateLineCount() {\n\t\tconst columns = this.#stream.columns || 80;\n\t\tconst fullPrefixText = this.getFullPrefixText(this.#prefixText, '-');\n\n\t\tthis.#lineCount = 0;\n\t\tfor (const line of stripAnsi(' '.repeat(this.#indent) + fullPrefixText + '--' + this.#text).split('\\n')) {\n\t\t\tthis.#lineCount += Math.max(1, Math.ceil(wcwidth(line) / columns));\n\t\t}\n\t}\n\n\tget isEnabled() {\n\t\treturn this.#isEnabled && !this.#isSilent;\n\t}\n\n\tset isEnabled(value) {\n\t\tif (typeof value !== 'boolean') {\n\t\t\tthrow new TypeError('The `isEnabled` option must be a boolean');\n\t\t}\n\n\t\tthis.#isEnabled = value;\n\t}\n\n\tget isSilent() {\n\t\treturn this.#isSilent;\n\t}\n\n\tset isSilent(value) {\n\t\tif (typeof value !== 'boolean') {\n\t\t\tthrow new TypeError('The `isSilent` option must be a boolean');\n\t\t}\n\n\t\tthis.#isSilent = value;\n\t}\n\n\tframe() {\n\t\tconst {frames} = this.#spinner;\n\t\tlet frame = frames[this.#frameIndex];\n\n\t\tif (this.color) {\n\t\t\tframe = chalk[this.color](frame);\n\t\t}\n\n\t\tthis.#frameIndex = ++this.#frameIndex % frames.length;\n\t\tconst fullPrefixText = (typeof this.#prefixText === 'string' && this.#prefixText !== '') ? this.#prefixText + ' ' : '';\n\t\tconst fullText = typeof this.text === 'string' ? ' ' + this.text : '';\n\n\t\treturn fullPrefixText + frame + fullText;\n\t}\n\n\tclear() {\n\t\tif (!this.#isEnabled || !this.#stream.isTTY) {\n\t\t\treturn this;\n\t\t}\n\n\t\tthis.#stream.cursorTo(0);\n\n\t\tfor (let index = 0; index < this.#linesToClear; index++) {\n\t\t\tif (index > 0) {\n\t\t\t\tthis.#stream.moveCursor(0, -1);\n\t\t\t}\n\n\t\t\tthis.#stream.clearLine(1);\n\t\t}\n\n\t\tif (this.#indent || this.lastIndent !== this.#indent) {\n\t\t\tthis.#stream.cursorTo(this.#indent);\n\t\t}\n\n\t\tthis.lastIndent = this.#indent;\n\t\tthis.#linesToClear = 0;\n\n\t\treturn this;\n\t}\n\n\trender() {\n\t\tif (this.#isSilent) {\n\t\t\treturn this;\n\t\t}\n\n\t\tthis.clear();\n\t\tthis.#stream.write(this.frame());\n\t\tthis.#linesToClear = this.#lineCount;\n\n\t\treturn this;\n\t}\n\n\tstart(text) {\n\t\tif (text) {\n\t\t\tthis.text = text;\n\t\t}\n\n\t\tif (this.#isSilent) {\n\t\t\treturn this;\n\t\t}\n\n\t\tif (!this.#isEnabled) {\n\t\t\tif (this.text) {\n\t\t\t\tthis.#stream.write(`- ${this.text}\\n`);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tif (this.isSpinning) {\n\t\t\treturn this;\n\t\t}\n\n\t\tif (this.#options.hideCursor) {\n\t\t\tcliCursor.hide(this.#stream);\n\t\t}\n\n\t\tif (this.#options.discardStdin && process.stdin.isTTY) {\n\t\t\tthis.#isDiscardingStdin = true;\n\t\t\tstdinDiscarder.start();\n\t\t}\n\n\t\tthis.render();\n\t\tthis.#id = setInterval(this.render.bind(this), this.interval);\n\n\t\treturn this;\n\t}\n\n\tstop() {\n\t\tif (!this.#isEnabled) {\n\t\t\treturn this;\n\t\t}\n\n\t\tclearInterval(this.#id);\n\t\tthis.#id = undefined;\n\t\tthis.#frameIndex = 0;\n\t\tthis.clear();\n\t\tif (this.#options.hideCursor) {\n\t\t\tcliCursor.show(this.#stream);\n\t\t}\n\n\t\tif (this.#options.discardStdin && process.stdin.isTTY && this.#isDiscardingStdin) {\n\t\t\tstdinDiscarder.stop();\n\t\t\tthis.#isDiscardingStdin = false;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tsucceed(text) {\n\t\treturn this.stopAndPersist({symbol: logSymbols.success, text});\n\t}\n\n\tfail(text) {\n\t\treturn this.stopAndPersist({symbol: logSymbols.error, text});\n\t}\n\n\twarn(text) {\n\t\treturn this.stopAndPersist({symbol: logSymbols.warning, text});\n\t}\n\n\tinfo(text) {\n\t\treturn this.stopAndPersist({symbol: logSymbols.info, text});\n\t}\n\n\tstopAndPersist(options = {}) {\n\t\tif (this.#isSilent) {\n\t\t\treturn this;\n\t\t}\n\n\t\tconst prefixText = options.prefixText || this.#prefixText;\n\t\tconst text = options.text || this.text;\n\t\tconst fullText = (typeof text === 'string') ? ' ' + text : '';\n\n\t\tthis.stop();\n\t\tthis.#stream.write(`${this.getFullPrefixText(prefixText, ' ')}${options.symbol || ' '}${fullText}\\n`);\n\n\t\treturn this;\n\t}\n}\n\nexport default function ora(options) {\n\treturn new Ora(options);\n}\n\nexport async function oraPromise(action, options) {\n\tconst actionIsFunction = typeof action === 'function';\n\tconst actionIsPromise = typeof action.then === 'function';\n\n\tif (!actionIsFunction && !actionIsPromise) {\n\t\tthrow new TypeError('Parameter `action` must be a Function or a Promise');\n\t}\n\n\tconst {successText, failText} = typeof options === 'object'\n\t\t? options\n\t\t: {successText: undefined, failText: undefined};\n\n\tconst spinner = ora(options).start();\n\n\ttry {\n\t\tconst promise = actionIsFunction ? action(spinner) : action;\n\t\tconst result = await promise;\n\n\t\tspinner.succeed(\n\t\t\tsuccessText === undefined\n\t\t\t\t? undefined\n\t\t\t\t: (typeof successText === 'string' ? successText : successText(result)),\n\t\t);\n\n\t\treturn result;\n\t} catch (error) {\n\t\tspinner.fail(\n\t\t\tfailText === undefined\n\t\t\t\t? undefined\n\t\t\t\t: (typeof failText === 'string' ? failText : failText(error)),\n\t\t);\n\n\t\tthrow error;\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}