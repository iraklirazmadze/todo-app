{"ast":null,"code":"import ansiEscapes from 'ansi-escapes';\n/**\n * Move cursor left by `x`\n * @param  {Readline} rl - Readline instance\n * @param  {Number}   x  - How far to go left (default to 1)\n */\n\nexport const left = function (rl, x) {\n  rl.output.write(ansiEscapes.cursorBackward(x));\n};\n/**\n * Move cursor right by `x`\n * @param  {Readline} rl - Readline instance\n * @param  {Number}   x  - How far to go left (default to 1)\n */\n\nexport const right = function (rl, x) {\n  rl.output.write(ansiEscapes.cursorForward(x));\n};\n/**\n * Move cursor up by `x`\n * @param  {Readline} rl - Readline instance\n * @param  {Number}   x  - How far to go up (default to 1)\n */\n\nexport const up = function (rl, x) {\n  rl.output.write(ansiEscapes.cursorUp(x));\n};\n/**\n * Move cursor down by `x`\n * @param  {Readline} rl - Readline instance\n * @param  {Number}   x  - How far to go down (default to 1)\n */\n\nexport const down = function (rl, x) {\n  rl.output.write(ansiEscapes.cursorDown(x));\n};\n/**\n * Clear current line\n * @param  {Readline} rl  - Readline instance\n * @param  {Number}   len - number of line to delete\n */\n\nexport const clearLine = function (rl, len) {\n  rl.output.write(ansiEscapes.eraseLines(len));\n};","map":{"version":3,"names":["ansiEscapes","left","rl","x","output","write","cursorBackward","right","cursorForward","up","cursorUp","down","cursorDown","clearLine","len","eraseLines"],"sources":["/home/razma/node_modules/inquirer/lib/utils/readline.js"],"sourcesContent":["import ansiEscapes from 'ansi-escapes';\n\n/**\n * Move cursor left by `x`\n * @param  {Readline} rl - Readline instance\n * @param  {Number}   x  - How far to go left (default to 1)\n */\n\nexport const left = function (rl, x) {\n  rl.output.write(ansiEscapes.cursorBackward(x));\n};\n\n/**\n * Move cursor right by `x`\n * @param  {Readline} rl - Readline instance\n * @param  {Number}   x  - How far to go left (default to 1)\n */\n\nexport const right = function (rl, x) {\n  rl.output.write(ansiEscapes.cursorForward(x));\n};\n\n/**\n * Move cursor up by `x`\n * @param  {Readline} rl - Readline instance\n * @param  {Number}   x  - How far to go up (default to 1)\n */\n\nexport const up = function (rl, x) {\n  rl.output.write(ansiEscapes.cursorUp(x));\n};\n\n/**\n * Move cursor down by `x`\n * @param  {Readline} rl - Readline instance\n * @param  {Number}   x  - How far to go down (default to 1)\n */\n\nexport const down = function (rl, x) {\n  rl.output.write(ansiEscapes.cursorDown(x));\n};\n\n/**\n * Clear current line\n * @param  {Readline} rl  - Readline instance\n * @param  {Number}   len - number of line to delete\n */\nexport const clearLine = function (rl, len) {\n  rl.output.write(ansiEscapes.eraseLines(len));\n};\n"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,cAAxB;AAEA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,IAAI,GAAG,UAAUC,EAAV,EAAcC,CAAd,EAAiB;EACnCD,EAAE,CAACE,MAAH,CAAUC,KAAV,CAAgBL,WAAW,CAACM,cAAZ,CAA2BH,CAA3B,CAAhB;AACD,CAFM;AAIP;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMI,KAAK,GAAG,UAAUL,EAAV,EAAcC,CAAd,EAAiB;EACpCD,EAAE,CAACE,MAAH,CAAUC,KAAV,CAAgBL,WAAW,CAACQ,aAAZ,CAA0BL,CAA1B,CAAhB;AACD,CAFM;AAIP;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMM,EAAE,GAAG,UAAUP,EAAV,EAAcC,CAAd,EAAiB;EACjCD,EAAE,CAACE,MAAH,CAAUC,KAAV,CAAgBL,WAAW,CAACU,QAAZ,CAAqBP,CAArB,CAAhB;AACD,CAFM;AAIP;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMQ,IAAI,GAAG,UAAUT,EAAV,EAAcC,CAAd,EAAiB;EACnCD,EAAE,CAACE,MAAH,CAAUC,KAAV,CAAgBL,WAAW,CAACY,UAAZ,CAAuBT,CAAvB,CAAhB;AACD,CAFM;AAIP;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMU,SAAS,GAAG,UAAUX,EAAV,EAAcY,GAAd,EAAmB;EAC1CZ,EAAE,CAACE,MAAH,CAAUC,KAAV,CAAgBL,WAAW,CAACe,UAAZ,CAAuBD,GAAvB,CAAhB;AACD,CAFM"},"metadata":{},"sourceType":"module"}