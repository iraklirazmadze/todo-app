{"ast":null,"code":"var _jsxFileName = \"/home/razma/Downloads/todo-app/src/ToDoList.js\";\nimport React, { useState } from \"react\";\nimport iconCheck from \"./images/icon-check.svg\";\nimport iconCross from \"./images/icon-cross.svg\";\nimport styles from \"./style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoList = _ref => {\n  let {\n    todoItems,\n    setTodoItems,\n    filterValue,\n    lightMode\n  } = _ref;\n  const list = [...todoItems];\n\n  const doneUndone = id => {\n    list.map((item, index) => {\n      if (item.content == id) {\n        list[index].done = !list[index].done;\n      }\n    });\n    setTodoItems(list);\n  };\n\n  const remove = id => {\n    list.map((item, index) => {\n      if (item.content == id) {\n        list.splice(index, 1);\n      }\n    });\n    setTodoItems(list);\n  };\n\n  let liList = [];\n\n  const filter = () => {\n    if (filterValue == 'complated') {\n      liList = todoItems.filter(item => {\n        if (item.done === true) {\n          return item;\n        }\n      });\n      return liList;\n    } else if (filterValue == 'active') {\n      liList = todoItems.filter(item => {\n        if (item.done === false) {\n          return item;\n        }\n      });\n      return liList;\n    } else {\n      return liList = todoItems;\n    }\n  };\n\n  return filter().map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n    onClick: () => doneUndone(todo.content),\n    style: lightMode ? styles.inputDiv : { ...styles.inputDiv,\n      ...styles.darkMode.darkUl,\n      borderBottom: '0.5px solid #393A4B'\n    },\n    id: todo.content,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"checkbox-text\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: !todo.done ? styles.checkBox : styles.checkBoxChecked,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: todo.done ? iconCheck : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: { ...(!todo.done ? { ...styles.liContent,\n            color: lightMode ? '#494C6B' : \"#C8CBE7\"\n          } : { ...styles.liContentChecked,\n            color: lightMode ? '#D1D2DA' : \"#4D5067\"\n          })\n        },\n        children: todo.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      onClick: () => remove(todo.content),\n      className: \"CrossImg\",\n      src: iconCross\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, todo.content, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this));\n};\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","iconCheck","iconCross","styles","TodoList","todoItems","setTodoItems","filterValue","lightMode","list","doneUndone","id","map","item","index","content","done","remove","splice","liList","filter","todo","inputDiv","darkMode","darkUl","borderBottom","checkBox","checkBoxChecked","liContent","color","liContentChecked"],"sources":["/home/razma/Downloads/todo-app/src/ToDoList.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport iconCheck from \"./images/icon-check.svg\"\nimport iconCross from \"./images/icon-cross.svg\"\nimport styles from \"./style\";\n\n\nconst TodoList = ({todoItems,setTodoItems,filterValue,lightMode}) =>{\n  const list = [...todoItems];\n  \n  const doneUndone =(id)=>{\n    list.map((item,index) => {\n      if(item.content == id){\n        list[index].done = !list[index].done\n      }\n    })\n  \n   setTodoItems(list);\n  }\n\n  const remove = (id) => {\n    list.map((item,index) => {\n      if(item.content == id){\n        list.splice(index,1);\n      }\n    })\n    setTodoItems(list);\n  }\n  \n  let liList = [];\n  const filter = () =>{\n    if(filterValue == 'complated'){\n      liList = todoItems.filter((item) => {\n        if(item.done === true){\n          return item;\n        }\n      })\n      return liList\n    }else if(filterValue == 'active'){\n      liList = todoItems.filter((item) => {\n        if(item.done === false){\n          return item;\n        }\n      })\n      return liList;\n    }else{\n      return liList = todoItems;\n    }\n  }\n\n  return (\n    \n    filter().map((todo) => \n    <li  onClick={() =>doneUndone(todo.content)} style={lightMode ? styles.inputDiv:{...styles.inputDiv, ...styles.darkMode.darkUl,borderBottom:'0.5px solid #393A4B'}} key={todo.content} id={todo.content}>\n      <div  className=\"checkbox-text\">\n        <div style={!todo.done ? styles.checkBox  : styles.checkBoxChecked}>\n          <img src={todo.done ? iconCheck:null}/>\n        </div>\n        <span style={{...!todo.done ? {...styles.liContent,color: lightMode ? '#494C6B':\"#C8CBE7\"} : {...styles.liContentChecked,color: lightMode ? '#D1D2DA':\"#4D5067\"}}}>{todo.content}</span>\n      </div>\n      <img onClick={() => remove(todo.content)} className=\"CrossImg\" src={iconCross}/>\n    </li>  \n    )\n   )\n}\n\nexport default TodoList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}