{"ast":null,"code":"import assert from 'node:assert';\nimport _ from 'lodash';\nimport Separator from './separator.js';\nimport Choice from './choice.js';\n/**\n * Choices collection\n * Collection of multiple `choice` object\n */\n\nexport default class Choices {\n  /** @param {Array} choices  All `choice` to keep in the collection */\n  constructor(choices, answers) {\n    this.choices = choices.map(val => {\n      if (val.type === 'separator') {\n        if (!(val instanceof Separator)) {\n          val = new Separator(val.line);\n        }\n\n        return val;\n      }\n\n      return new Choice(val, answers);\n    });\n    this.realChoices = this.choices.filter(Separator.exclude).filter(item => !item.disabled);\n    Object.defineProperty(this, 'length', {\n      get() {\n        return this.choices.length;\n      },\n\n      set(val) {\n        this.choices.length = val;\n      }\n\n    });\n    Object.defineProperty(this, 'realLength', {\n      get() {\n        return this.realChoices.length;\n      },\n\n      set() {\n        throw new Error('Cannot set `realLength` of a Choices collection');\n      }\n\n    });\n  }\n  /**\n   * Get a valid choice from the collection\n   * @param  {Number} selector  The selected choice index\n   * @return {Choice|Undefined} Return the matched choice or undefined\n   */\n\n\n  getChoice(selector) {\n    assert(typeof selector === 'number');\n    return this.realChoices[selector];\n  }\n  /**\n   * Get a raw element from the collection\n   * @param  {Number} selector  The selected index value\n   * @return {Choice|Undefined} Return the matched choice or undefined\n   */\n\n\n  get(selector) {\n    assert(typeof selector === 'number');\n    return this.choices[selector];\n  }\n  /**\n   * Match the valid choices against a where clause\n   * @param  {Object} whereClause Lodash `where` clause\n   * @return {Array}              Matching choices or empty array\n   */\n\n\n  where(whereClause) {\n    return _.filter(this.realChoices, whereClause);\n  }\n  /**\n   * Pluck a particular key from the choices\n   * @param  {String} propertyName Property name to select\n   * @return {Array}               Selected properties\n   */\n\n\n  pluck(propertyName) {\n    return _.map(this.realChoices, propertyName);\n  } // Expose usual Array methods\n\n\n  indexOf() {\n    return this.choices.indexOf(...arguments);\n  }\n\n  forEach() {\n    return this.choices.forEach(...arguments);\n  }\n\n  filter() {\n    return this.choices.filter(...arguments);\n  }\n\n  reduce() {\n    return this.choices.reduce(...arguments);\n  }\n\n  find(func) {\n    return this.choices.find(func);\n  }\n\n  push() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    const objs = args.map(val => new Choice(val));\n    this.choices.push(...objs);\n    this.realChoices = this.choices.filter(Separator.exclude).filter(item => !item.disabled);\n    return this.choices;\n  }\n\n}","map":{"version":3,"names":["assert","_","Separator","Choice","Choices","constructor","choices","answers","map","val","type","line","realChoices","filter","exclude","item","disabled","Object","defineProperty","get","length","set","Error","getChoice","selector","where","whereClause","pluck","propertyName","indexOf","forEach","reduce","find","func","push","args","objs"],"sources":["/home/razma/node_modules/inquirer/lib/objects/choices.js"],"sourcesContent":["import assert from 'node:assert';\nimport _ from 'lodash';\n\nimport Separator from './separator.js';\nimport Choice from './choice.js';\n\n/**\n * Choices collection\n * Collection of multiple `choice` object\n */\nexport default class Choices {\n  /** @param {Array} choices  All `choice` to keep in the collection */\n  constructor(choices, answers) {\n    this.choices = choices.map((val) => {\n      if (val.type === 'separator') {\n        if (!(val instanceof Separator)) {\n          val = new Separator(val.line);\n        }\n\n        return val;\n      }\n\n      return new Choice(val, answers);\n    });\n\n    this.realChoices = this.choices\n      .filter(Separator.exclude)\n      .filter((item) => !item.disabled);\n\n    Object.defineProperty(this, 'length', {\n      get() {\n        return this.choices.length;\n      },\n      set(val) {\n        this.choices.length = val;\n      },\n    });\n\n    Object.defineProperty(this, 'realLength', {\n      get() {\n        return this.realChoices.length;\n      },\n      set() {\n        throw new Error('Cannot set `realLength` of a Choices collection');\n      },\n    });\n  }\n\n  /**\n   * Get a valid choice from the collection\n   * @param  {Number} selector  The selected choice index\n   * @return {Choice|Undefined} Return the matched choice or undefined\n   */\n  getChoice(selector) {\n    assert(typeof selector === 'number');\n    return this.realChoices[selector];\n  }\n\n  /**\n   * Get a raw element from the collection\n   * @param  {Number} selector  The selected index value\n   * @return {Choice|Undefined} Return the matched choice or undefined\n   */\n  get(selector) {\n    assert(typeof selector === 'number');\n    return this.choices[selector];\n  }\n\n  /**\n   * Match the valid choices against a where clause\n   * @param  {Object} whereClause Lodash `where` clause\n   * @return {Array}              Matching choices or empty array\n   */\n  where(whereClause) {\n    return _.filter(this.realChoices, whereClause);\n  }\n\n  /**\n   * Pluck a particular key from the choices\n   * @param  {String} propertyName Property name to select\n   * @return {Array}               Selected properties\n   */\n  pluck(propertyName) {\n    return _.map(this.realChoices, propertyName);\n  }\n\n  // Expose usual Array methods\n  indexOf(...args) {\n    return this.choices.indexOf(...args);\n  }\n\n  forEach(...args) {\n    return this.choices.forEach(...args);\n  }\n\n  filter(...args) {\n    return this.choices.filter(...args);\n  }\n\n  reduce(...args) {\n    return this.choices.reduce(...args);\n  }\n\n  find(func) {\n    return this.choices.find(func);\n  }\n\n  push(...args) {\n    const objs = args.map((val) => new Choice(val));\n    this.choices.push(...objs);\n    this.realChoices = this.choices\n      .filter(Separator.exclude)\n      .filter((item) => !item.disabled);\n    return this.choices;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}