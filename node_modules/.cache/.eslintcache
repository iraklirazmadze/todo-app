[{"/home/razma/Downloads/todo-app/src/index.js":"1","/home/razma/Downloads/todo-app/src/mainPage.js":"2","/home/razma/Downloads/todo-app/src/ToDoList.js":"3","/home/razma/Downloads/todo-app/src/style.js":"4"},{"size":242,"mtime":1666038098000,"results":"5","hashOfConfig":"6"},{"size":3953,"mtime":1667034568430,"results":"7","hashOfConfig":"6"},{"size":1842,"mtime":1666951669684,"results":"8","hashOfConfig":"6"},{"size":1527,"mtime":1666950174383,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"5xwg7p",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"13"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"/home/razma/Downloads/todo-app/src/index.js",[],[],[],"/home/razma/Downloads/todo-app/src/mainPage.js",["24","25","26","27","28","29","30","31","32","33"],[],"/home/razma/Downloads/todo-app/src/ToDoList.js",["34","35","36","37","38","39","40","41","42","43","44"],[],"import React, { useState } from \"react\";\nimport iconCheck from \"./images/icon-check.svg\"\nimport iconCross from \"./images/icon-cross.svg\"\nimport styles from \"./style\";\n\n\nconst TodoList = ({todoItems,setTodoItems,filterValue,lightMode}) =>{\n  const list = [...todoItems];\n  \n  const doneUndone =(id)=>{\n    list.map((item,index) => {\n      if(item.content == id){\n        list[index].done = !list[index].done\n      }\n    })\n  \n   setTodoItems(list);\n  }\n\n  const remove = (id) => {\n    list.map((item,index) => {\n      if(item.content == id){\n        list.splice(index,1);\n      }\n    })\n    setTodoItems(list);\n  }\n  \n  let liList = [];\n  const filter = () =>{\n    if(filterValue == 'complated'){\n      liList = todoItems.filter((item) => {\n        if(item.done === true){\n          return item;\n        }\n      })\n      return liList\n    }else if(filterValue == 'active'){\n      liList = todoItems.filter((item) => {\n        if(item.done === false){\n          return item;\n        }\n      })\n      return liList;\n    }else{\n      return liList = todoItems;\n    }\n  }\n\n  return (\n    \n    filter().map((todo) => \n    <li  onClick={() =>doneUndone(todo.content)} style={lightMode ? styles.inputDiv:{...styles.inputDiv, ...styles.darkMode.darkUl,borderBottom:'0.5px solid #393A4B'}} key={todo.content} id={todo.content}>\n      <div  className=\"checkbox-text\">\n        <div style={!todo.done ? styles.checkBox  : styles.checkBoxChecked}>\n          <img src={todo.done ? iconCheck:null}/>\n        </div>\n        <span style={{...!todo.done ? {...styles.liContent,color: lightMode ? '#494C6B':\"#C8CBE7\"} : {...styles.liContentChecked,color: lightMode ? '#D1D2DA':\"#4D5067\"}}}>{todo.content}</span>\n      </div>\n      <img onClick={() => remove(todo.content)} className=\"CrossImg\" src={iconCross}/>\n    </li>  \n    )\n   )\n}\n\nexport default TodoList;","/home/razma/Downloads/todo-app/src/style.js",[],[],{"ruleId":"45","severity":1,"message":"46","line":2,"column":8,"nodeType":"47","messageId":"48","endLine":2,"endColumn":16},{"ruleId":"45","severity":1,"message":"49","line":7,"column":8,"nodeType":"47","messageId":"48","endLine":7,"endColumn":17},{"ruleId":"45","severity":1,"message":"50","line":19,"column":5,"nodeType":"47","messageId":"48","endLine":19,"endColumn":10},{"ruleId":"51","severity":1,"message":"52","line":26,"column":18,"nodeType":"53","messageId":"54","endLine":26,"endColumn":20},{"ruleId":"55","severity":1,"message":"56","line":40,"column":42,"nodeType":"57","messageId":"58","endLine":40,"endColumn":44},{"ruleId":"59","severity":1,"message":"60","line":75,"column":9,"nodeType":"61","endLine":75,"endColumn":107},{"ruleId":"55","severity":1,"message":"56","line":87,"column":37,"nodeType":"57","messageId":"58","endLine":87,"endColumn":39},{"ruleId":"51","severity":1,"message":"52","line":97,"column":58,"nodeType":"53","messageId":"54","endLine":97,"endColumn":60},{"ruleId":"51","severity":1,"message":"52","line":98,"column":57,"nodeType":"53","messageId":"54","endLine":98,"endColumn":59},{"ruleId":"51","severity":1,"message":"52","line":99,"column":60,"nodeType":"53","messageId":"54","endLine":99,"endColumn":62},{"ruleId":"45","severity":1,"message":"62","line":1,"column":17,"nodeType":"47","messageId":"48","endLine":1,"endColumn":25},{"ruleId":"55","severity":1,"message":"63","line":11,"column":27,"nodeType":"57","messageId":"64","endLine":11,"endColumn":29},{"ruleId":"51","severity":1,"message":"52","line":12,"column":23,"nodeType":"53","messageId":"54","endLine":12,"endColumn":25},{"ruleId":"55","severity":1,"message":"63","line":21,"column":27,"nodeType":"57","messageId":"64","endLine":21,"endColumn":29},{"ruleId":"51","severity":1,"message":"52","line":22,"column":23,"nodeType":"53","messageId":"54","endLine":22,"endColumn":25},{"ruleId":"51","severity":1,"message":"52","line":31,"column":20,"nodeType":"53","messageId":"54","endLine":31,"endColumn":22},{"ruleId":"55","severity":1,"message":"56","line":32,"column":40,"nodeType":"57","messageId":"58","endLine":32,"endColumn":42},{"ruleId":"51","severity":1,"message":"52","line":38,"column":26,"nodeType":"53","messageId":"54","endLine":38,"endColumn":28},{"ruleId":"55","severity":1,"message":"56","line":39,"column":40,"nodeType":"57","messageId":"58","endLine":39,"endColumn":42},{"ruleId":"59","severity":1,"message":"60","line":56,"column":11,"nodeType":"61","endLine":56,"endColumn":50},{"ruleId":"59","severity":1,"message":"60","line":60,"column":7,"nodeType":"61","endLine":60,"endColumn":87},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'iconCheck' is defined but never used.","'lists' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside"]